buildscript {
    ext {
        android_support_lib_version = '23.+'
        anko_version = "0.8.+"
        retrofit_version = '2.0.+'
        okhttp_version = '3.0.+'
        rxlifecycle_version = '0.4.0'
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {

        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.1'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 23
    buildToolsVersion build_tools_version

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        applicationId "li.ruoshi.nextday"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.7
        targetCompatibility 1.7
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:support-v4:$android_support_lib_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.1'
    compile 'com.google.dagger:dagger:2.0.2'
    kapt 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.3'
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"

    compile("com.trello:rxlifecycle:$rxlifecycle_version") {
        exclude group: 'com.android.support'
    }
    compile("com.trello:rxlifecycle-components:$rxlifecycle_version") {
        exclude group: 'com.android.support'
    }
    compile("org.jetbrains.anko:anko-sdk15:$anko_version") {
        exclude group: 'org.jetbrains.kotlin'
    }
    compile("org.jetbrains.anko:anko-support-v4:$anko_version") {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'com.android.support'
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}

task genAppKeyTemplate << {
    def f = project.file("./src/main/res/raw/app_key.json")
    if (f.exists()) {
        println "app_key.json already exists."
    } else {
        def raw = project.file("./src/main/res/raw")
        if ((raw.exists() || raw.mkdirs()) && f.createNewFile()) {
            f.append("{\n" +
                    "    \"name\": \"\",\n" +
                    "    \"key\": \"\"\n" +
                    "}")
            println "generated app_key.json, you need to fulfill your NEXTDAY partner name and key into it."
        }
    }
}

tasks.findByName("preBuild").dependsOn(tasks.findByName("genAppKeyTemplate"))

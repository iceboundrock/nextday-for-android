buildscript {
    ext {
        kotlinVersion = '0.10.195'

    }

    repositories {
        jcenter()

    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        applicationId "li.ruoshi.nextday"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7

    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:21.0.+'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'joda-time:joda-time:2.7'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
}

task genAppKeyTemplate << {
    File f = project.file("./src/main/res/raw/app_key.json")
    if (f.exists()){
        println "app_key.json exists."
    }else {
        File raw = project.file("./src/main/res/raw")
        raw.mkdirs()

        if(f.createNewFile()){
            f.append("{\n" +
                    "    \"name\": \"\",\n" +
                    "    \"key\": \"\"\n" +
                    "}")
        }
    }
}

tasks.findByName("preBuild").dependsOn(tasks.findByName("genAppKeyTemplate"))
